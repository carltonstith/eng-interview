// <auto-generated />
using System;
using InmateLocator.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InmateLocator.Migrations
{
    [DbContext(typeof(InmateLocatorContext))]
    [Migration("20200221044410_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InmateLocator.Entities.Inmate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("DateOfBirth")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PID")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.HasKey("Id");

                    b.ToTable("Inmates");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                            DateOfBirth = new DateTimeOffset(new DateTime(1680, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, -57, 0, 0)),
                            FirstName = "Dan",
                            LastName = "Lopez",
                            PID = "123456"
                        },
                        new
                        {
                            Id = new Guid("da2fd609-d754-4feb-8acd-c4f9ff13ba96"),
                            DateOfBirth = new DateTimeOffset(new DateTime(1780, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, -57, 0, 0)),
                            FirstName = "Ronald",
                            LastName = "Pax",
                            PID = "598744"
                        },
                        new
                        {
                            Id = new Guid("2902b665-1190-4c70-9915-b9c2d7680450"),
                            DateOfBirth = new DateTimeOffset(new DateTime(1650, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, -57, 0, 0)),
                            FirstName = "Arnold",
                            LastName = "Phillips",
                            PID = "732123"
                        },
                        new
                        {
                            Id = new Guid("102b566b-ba1f-404c-b2df-e2cde39ade09"),
                            DateOfBirth = new DateTimeOffset(new DateTime(1753, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, -57, 0, 0)),
                            FirstName = "Brian",
                            LastName = "Dawkins",
                            PID = "584123"
                        },
                        new
                        {
                            Id = new Guid("5b3621c0-7b12-4e80-9c8b-3398cba7ee05"),
                            DateOfBirth = new DateTimeOffset(new DateTime(1623, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, -57, 0, 0)),
                            FirstName = "Christopher",
                            LastName = "Wallace",
                            PID = "852014"
                        },
                        new
                        {
                            Id = new Guid("2aadd2df-7caf-45ab-9355-7f6332985a87"),
                            DateOfBirth = new DateTimeOffset(new DateTime(1801, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, -57, 0, 0)),
                            FirstName = "Johnathan",
                            LastName = "Hugh",
                            PID = "987456"
                        },
                        new
                        {
                            Id = new Guid("2ee49fe3-edf2-4f91-8409-3eb25ce6ca51"),
                            DateOfBirth = new DateTimeOffset(new DateTime(1668, 3, 29, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -4, -57, 0, 0)),
                            FirstName = "Rick",
                            LastName = "Flair",
                            PID = "741258"
                        });
                });

            modelBuilder.Entity("InmateLocator.Entities.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurrentLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Guid>("InmateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InmateId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5b1c2b4d-48c7-402a-80c3-cc796ad49c6b"),
                            CurrentLocation = "City Hall",
                            InmateId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35")
                        },
                        new
                        {
                            Id = new Guid("d8663e5e-7494-4f81-8739-6e0de1bea7ee"),
                            CurrentLocation = "City Hall",
                            InmateId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35")
                        },
                        new
                        {
                            Id = new Guid("d173e20d-159e-4127-9ce9-b0ac2564ad97"),
                            CurrentLocation = "City Hall",
                            InmateId = new Guid("da2fd609-d754-4feb-8acd-c4f9ff13ba96")
                        },
                        new
                        {
                            Id = new Guid("40ff5488-fdab-45b5-bc3a-14302d59869a"),
                            CurrentLocation = "City Hall",
                            InmateId = new Guid("2902b665-1190-4c70-9915-b9c2d7680450")
                        });
                });

            modelBuilder.Entity("InmateLocator.Entities.Location", b =>
                {
                    b.HasOne("InmateLocator.Entities.Inmate", "Inmate")
                        .WithMany()
                        .HasForeignKey("InmateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
